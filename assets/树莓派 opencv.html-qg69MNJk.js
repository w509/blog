import{_ as i,c as e,a,o as n}from"./app-CubtBdAa.js";const t={};function l(h,s){return n(),e("div",null,[...s[0]||(s[0]=[a(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>本文使用树莓派4B，刷入的是 Bullseye 系统（2024.10.22版本），为什么不刷最新的 Bookworm 的原因是在实际部署了之后发现其使用 OV5647 的时候出现各式各样的 bug。而 Bullseye 的 <code>raspi-config</code> 依然存在的摄像头命令可以直接启用而不需要搞奇奇怪怪的配置。</p><p>笔者会在本文中记录踩坑过程，希望能够提供参考。</p><h2 id="树莓派系统刷入" tabindex="-1"><a class="header-anchor" href="#树莓派系统刷入"><span>树莓派系统刷入</span></a></h2><p>刷入 2024.10.22 更新的 Bullseye 镜像，使用官方镜像烧录器可以免去第一次登陆修改密码或是配置 wifi 等操作，推荐使用，具体刷入过程不赘述。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><h3 id="ssh-连接" tabindex="-1"><a class="header-anchor" href="#ssh-连接"><span>ssh 连接</span></a></h3><p>登上路由器，固定树莓派的 ip 地址</p><p>若是之前 ssh 连接过之前的系统，那么需要删除 ssh 的配置避免报错</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh-keygen</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> “192.168.3.200”</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   #删除之前的配置</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pi@192.168.3.200</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            #连接</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>反正是自用系统，不必过多担心安全性问题，直接以 root 身份登录</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -i</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">           # root 身份</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">passwd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       # 设置 root 密码</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">passwd</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -u</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 解锁以 root 登录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们需要修改 <code>/etc/ssh/sshd_config</code> 文件</p><div class="language-vim line-numbers-mode" data-highlighter="shiki" data-ext="vim" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-vim"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">LoginGraceTime 2m修改为0            </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssh 未登录的可超时时间</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">PermitRootLogin 值修改为yes         </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 允许 root 登录</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">……</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">TCPKeepAlive 去除注释修改为yes      </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssh 服务器保持连接</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">……</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClientAliveInterval 值修改为60      </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ssh 每分钟发送一次活动请求，可以保活</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClientAliveCountMax 值修改为1000    </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 1000次发送请求无响应就关闭连接，就是更改为一个很大的数字让 ssh 保持连接</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我个人习惯用 vim，可以用<code>/</code>很快捷的查找到这几行</p><p>这几行的作用基本都是为了保持 ssh 一直连接，更改这几行可以减少很多奇怪的问题，包括服务器开机后 ssh 长时间不连接，之后再想连接被拒绝</p><h3 id="apt" tabindex="-1"><a class="header-anchor" href="#apt"><span>apt</span></a></h3><p>接下来是 apt 的配置，首先是换源，这里使用清华源</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/" target="_blank" rel="noopener noreferrer">Debian</a> <a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspberrypi/" target="_blank" rel="noopener noreferrer">Raspberry</a></p><p>因为树莓派系统是以 Debian 为基础的，所以换源需要同时换 Debian 的文件</p><p>注意我们使用的是 Bullseye 镜像，需要把源换为 Bullseye 版本</p><p>同时我会勾上<code>强制安全更新使用镜像</code>以追求更快的速度，这个看个人喜好</p><p>接下来就是常规的更新，下载环节</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> aptitude</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我推荐使用 aptitude，它提供了更好的软件包管理和更优化的命令行图形界面，使用方式也与 apt 一致</p><h3 id="修改欢迎页信息" tabindex="-1"><a class="header-anchor" href="#修改欢迎页信息"><span>修改欢迎页信息</span></a></h3><p>参考 <a href="https://www.cnblogs.com/azureology/p/14051040.html" target="_blank" rel="noopener noreferrer">这篇文章</a></p><p>新建 <code>/etc/update-motd.d/11-info</code>，写入以下内容</p><div class="language-vim line-numbers-mode" data-highlighter="shiki" data-ext="vim" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-vim"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">#!</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">/bin/</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">sh</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uptime | awk </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;{printf(&quot;\\nCPU Load: %.2f\\t&quot;, $(NF-2))}&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">free -m | awk </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;NR==2{printf(&quot;Mem: %s/%sMB %.2f%%\\n&quot;, $3,$2,$3*100/$2)}&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cat </span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">/sys/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">class</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">/thermal/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">thermal_zone0</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">/temp|awk &#39;{printf(&quot;CPU Temp: %.2f\\t&quot;,$1/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">df -h | awk </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;$NF==&quot;/&quot;{printf &quot;Disk: %.1f/%.1fGB %s\\n\\n&quot;, $3,$2,$5}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而后给权限，取消原始的欢迎信息</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">chmod</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 777</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/update-motd.d/11-info</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mv</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/motd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/motd.sample</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>欢迎信息就简洁显示温度等信息了</p><h3 id="摄像头和-vnc" tabindex="-1"><a class="header-anchor" href="#摄像头和-vnc"><span>摄像头和 VNC</span></a></h3><p>利用 <code>raspi-config</code> 可以轻松完成许多配置，打开摄像头、VNC，以及设置中文</p><p>Bookworm 系统删除了打开摄像头的配置，而转为自动识别，导致我手头的 OV5647 无法识别到，而需要更改 <code>/boot/firmware/config.txt</code> 文件（在 Bullseye 及之前版本系统中是<code>/boot/config.txt</code>）</p><p>在 Bullseye 中打开摄像头后，连接 VNC 后会无法显示，出现<code>Cannot currently show the desktop</code>，找了很多资料都在改分辨率，实际上这里需要更改<code>/boot/config.txt</code></p><div class="language-vim line-numbers-mode" data-highlighter="shiki" data-ext="vim" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-vim"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">hdmi_force_hotplug</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      #</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 强制启用HDMI输出</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>取消这行的注释，重启后 VNC 即可正常连接</p><p>使用 <code>vcgencmd get_camera</code> 查看摄像头启用状态</p><p>这里需要注意，这是笔者在配置过程中遇到的最大的坑点，直到我找到了 <a href="https://blog.csdn.net/bert20010524/article/details/132393260" target="_blank" rel="noopener noreferrer">这篇文章</a></p><p>不要使用 <code>libcamera-hello</code> 去调用摄像头，会报错说未识别摄像头等，而实际上你可以直接使用 opencv 去调用摄像头</p><p>而当你在 <code>config.txt</code> 中加入 <code>dtoverlay=ov5647</code> 后，<code>libcamera-hello</code> 可能还是会报错，同时 opencv 也没法调用摄像头了</p><p>所以仅需开启 <code>raspi-config</code> 中的配置即可</p><h3 id="opencv" tabindex="-1"><a class="header-anchor" href="#opencv"><span>opencv</span></a></h3><p>可以使用 <code>aptitude install python3-opencv</code> 安装 opencv，也可以使用 <code>pip</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> global.index-url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://pypi.tuna.tsinghua.edu.cn/simple</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    #设置镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> opencv-python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此配置完成</p>`,47)])])}const d=i(t,[["render",l]]),r=JSON.parse(`{"path":"/%E6%A0%91%E8%8E%93%E6%B4%BE/%E6%A0%91%E8%8E%93%E6%B4%BE%20opencv.html","title":"树莓派 opencv","lang":"zh-CN","frontmatter":{"title":"树莓派 opencv","createTime":"2025/04/18 19:41:37","description":"前言 本文使用树莓派4B，刷入的是 Bullseye 系统（2024.10.22版本），为什么不刷最新的 Bookworm 的原因是在实际部署了之后发现其使用 OV5647 的时候出现各式各样的 bug。而 Bullseye 的 raspi-config 依然存在的摄像头命令可以直接启用而不需要搞奇奇怪怪的配置。 笔者会在本文中记录踩坑过程，希望能够提...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树莓派 opencv\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-01T09:57:58.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.w509.xyz/%E6%A0%91%E8%8E%93%E6%B4%BE/%E6%A0%91%E8%8E%93%E6%B4%BE%20opencv.html"}],["meta",{"property":"og:site_name","content":"w509's blog"}],["meta",{"property":"og:title","content":"树莓派 opencv"}],["meta",{"property":"og:description","content":"前言 本文使用树莓派4B，刷入的是 Bullseye 系统（2024.10.22版本），为什么不刷最新的 Bookworm 的原因是在实际部署了之后发现其使用 OV5647 的时候出现各式各样的 bug。而 Bullseye 的 raspi-config 依然存在的摄像头命令可以直接启用而不需要搞奇奇怪怪的配置。 笔者会在本文中记录踩坑过程，希望能够提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-01T09:57:58.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-01T09:57:58.000Z"}]]},"readingTime":{"minutes":3.67,"words":1102},"git":{"createdTime":1745051286000,"updatedTime":1748771878000},"autoDesc":true,"filePathRelative":"树莓派/树莓派 opencv.md","headers":[],"categoryList":[{"id":"7fa67b","sort":10002,"name":"树莓派"}]}`);export{d as comp,r as data};
