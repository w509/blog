import{_ as i,c as a,a as n,o as t}from"./app-CubtBdAa.js";const e={};function p(l,s){return t(),a("div",null,[...s[0]||(s[0]=[n(`<p>首先装好 VScode，相信没什么问题，装好 C++插件（搜索出来第一个就是）</p><p>然后点击 <a href="https://sourceforge.net/projects/mingw-w64/files/" target="_blank" rel="noopener noreferrer">这个链接</a></p><p>下拉，在最新版本号下找到「x86_64-posix-seh」</p><p>鉴于国内网络问题（懂得都懂），直接下载这个免安装版本</p><p>创建一个你要放代码文件的文件夹，比如我的叫做「C++」</p><p>将下载后的文件解压到这个文件夹里</p><p>点进mingw64，点进bin</p><p>然后复制绝对路径</p><p>win10 下有快捷键 「win+q」，输入 path，弹出「编辑系统环境变量」</p><p>点进去，点击下方环境变量</p><p>弹出的页面，上方为用户变量，下方为系统变量，选择系统变量中的「Path」</p><p>点击新建，把你刚刚复制路径的粘贴进去</p><p>一路确定，这样你就完成了 mingw64 编译器和调试器的环境配置</p><p>试验一下，「win+R」输入「powershell」，回车，在弹出的框框中输入「g++ -v」</p><p>弹出只需要注意最后一行就行，若成功将显示版本号，即「gcc version...」</p><p>恭喜你，搭建的环境是没问题的</p><p>现在，重启 VScode，因为没重启 json 文件的配置会莫名其妙出锅</p><h1 id="json-文件" tabindex="-1"><a class="header-anchor" href="#json-文件"><span>json 文件</span></a></h1><p>首先记好打开命令面板的快捷键「ctrl+shift+P」或是「F1」，后面我们会经常用到</p><p>在放代码的文件夹下新建一个 cpp 文件</p><p>复制以下代码（当然，想自己写一个也没问题，随便写个能运行的就行）</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">#</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">iostream</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">#</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vector</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">#</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">string</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">using</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> namespace</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> std</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    vector</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">string</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C++</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">World</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">VS Code</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">and the C++ extension!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> string</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&amp;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> word </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        cout </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> word </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    cout </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> endl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 F5，弹出如下图</p><p><img src="https://gitee.com/w509git/image/raw/master/20200724112652.png" alt=""></p><p>分别选择如图所示的选项</p><p>一通运行后，生成了「.vscode」文件夹，包含「tasks.json」及「launch.json」两个文件</p><p>以上，需运行的 json 文件配置完毕，每次打完代码后直接 F5 即可</p><p>另外推荐插件 code-runner，编译运行都比较快</p><p>至于还有一个 settings.json，可以选择不配置</p><p>本文参考 <a href="https://code.visualstudio.com/docs/cpp/config-mingw" target="_blank" rel="noopener noreferrer">官方doc</a></p><p>只是翻译及简化</p>`,31)])])}const k=i(e,[["render",p]]),r=JSON.parse(`{"path":"/vscode/VScode%20C__%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html","title":"VScode C++ 环境搭建","lang":"zh-CN","frontmatter":{"title":"VScode C++ 环境搭建","createTime":"2020/07/23 22:49:18","description":"首先装好 VScode，相信没什么问题，装好 C++插件（搜索出来第一个就是） 然后点击 这个链接 下拉，在最新版本号下找到「x86_64-posix-seh」 鉴于国内网络问题（懂得都懂），直接下载这个免安装版本 创建一个你要放代码文件的文件夹，比如我的叫做「C++」 将下载后的文件解压到这个文件夹里 点进mingw64，点进bin 然后复制绝对路径...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VScode C++ 环境搭建\\",\\"image\\":[\\"https://gitee.com/w509git/image/raw/master/20200724112652.png\\"],\\"dateModified\\":\\"2025-06-01T09:57:58.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.w509.xyz/vscode/VScode%20C__%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"w509's blog"}],["meta",{"property":"og:title","content":"VScode C++ 环境搭建"}],["meta",{"property":"og:description","content":"首先装好 VScode，相信没什么问题，装好 C++插件（搜索出来第一个就是） 然后点击 这个链接 下拉，在最新版本号下找到「x86_64-posix-seh」 鉴于国内网络问题（懂得都懂），直接下载这个免安装版本 创建一个你要放代码文件的文件夹，比如我的叫做「C++」 将下载后的文件解压到这个文件夹里 点进mingw64，点进bin 然后复制绝对路径..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/w509git/image/raw/master/20200724112652.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-01T09:57:58.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-01T09:57:58.000Z"}]]},"readingTime":{"minutes":1.83,"words":550},"git":{"createdTime":1748686631000,"updatedTime":1748771878000},"autoDesc":true,"filePathRelative":"vscode/VScode C++ 环境搭建.md","headers":[],"categoryList":[{"id":"e2fc80","sort":10004,"name":"vscode"}]}`);export{k as comp,r as data};
