import{_ as n,c as r,a as d,b as c,d as t,w as l,e as a,r as p,o as s}from"./app-CubtBdAa.js";const i={};function C(m,e){const o=p("VPCard");return s(),r("div",null,[e[1]||(e[1]=d('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>久闻 clangd 的智能补全功能非常强大，很好奇和 C/C++ 插件的差异</p><p>偶然刷到一个视频对比速度，发现 clangd 的速度比 C/C++ 插件快很多，尤其是大型项目</p><p>用 CubeMX 生成的项目怎么不算大呢，于是我尝试了一下，发现确实快得多，回头看 C/C++ 的提示速度简直和便秘一样</p><h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><h3 id="clangd" tabindex="-1"><a class="header-anchor" href="#clangd"><span>Clangd</span></a></h3><p>就是为了这醋包的饺子，怎么能少了这个呢</p><p>在 VSCode 中安装 <code>clangd</code> 插件，安装后会自动下载 clangd 的二进制文件（从 github 上下载，如果网络环境不佳自行解决）</p><p>或者可以自行到 github 上<a href="https://github.com/clangd/clangd/releases" target="_blank" rel="noopener noreferrer">下载</a>，无脑最新版本即可</p><p>将下载下来的 bin 文件夹的路径添加到环境变量，然后到 clangd 插件的设置里直接配置 path 为 <code>clangd.exe</code> 即可</p><p>当然，也可以不添加环境变量，配置 <code>clangd.exe</code> 的绝对路径到插件设置里</p><p>记得关掉 vscode 重开，不然扫不到路径</p><h3 id="stm32cubeclt" tabindex="-1"><a class="header-anchor" href="#stm32cubeclt"><span>STM32CubeCLT</span></a></h3><p>STM32CubeCLT 的<a href="https://www.st.com.cn/zh/development-tools/stm32cubeclt.html" target="_blank" rel="noopener noreferrer">官方描述</a>是这样的：</p>',14)),c(o,null,{default:l(()=>[...e[0]||(e[0]=[t("p",null,"Toolset for third-party integrated development environment (IDE) providers, allowing the use of STMicroelectronics proprietary tools within their own IDE frameworks",-1)])]),_:1}),e[2]||(e[2]=t("p",null,[a("不必理会，下拉直接下载最新的 "),t("code",null,"STM32CubeCLT-Win"),a(" 即可")],-1)),e[3]||(e[3]=t("p",null,"它提供一个 exe，直接安装到想要安装的目录下即可，会自动配置环境变量，省去我们配置的麻烦",-1)),e[4]||(e[4]=t("p",null,[a("它提供了我们所需的 "),t("code",null,"cmake + ninja + arm-none-eabi"),a(" 等工具，能直接帮我们完成所有编译需要的环境配置")],-1))])}const h=n(i,[["render",C]]),u=JSON.parse(`{"path":"/vscode/vscode_STM32CubeCLT.html","title":"vscode+STM32CubeCLT","lang":"zh-CN","frontmatter":{"title":"vscode+STM32CubeCLT","createTime":"2025/06/16 22:00:00","description":"前言 久闻 clangd 的智能补全功能非常强大，很好奇和 C/C++ 插件的差异 偶然刷到一个视频对比速度，发现 clangd 的速度比 C/C++ 插件快很多，尤其是大型项目 用 CubeMX 生成的项目怎么不算大呢，于是我尝试了一下，发现确实快得多，回头看 C/C++ 的提示速度简直和便秘一样 准备 Clangd 就是为了这醋包的饺子，怎么能少了...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vscode+STM32CubeCLT\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-12T09:05:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.w509.xyz/vscode/vscode_STM32CubeCLT.html"}],["meta",{"property":"og:site_name","content":"w509's blog"}],["meta",{"property":"og:title","content":"vscode+STM32CubeCLT"}],["meta",{"property":"og:description","content":"前言 久闻 clangd 的智能补全功能非常强大，很好奇和 C/C++ 插件的差异 偶然刷到一个视频对比速度，发现 clangd 的速度比 C/C++ 插件快很多，尤其是大型项目 用 CubeMX 生成的项目怎么不算大呢，于是我尝试了一下，发现确实快得多，回头看 C/C++ 的提示速度简直和便秘一样 准备 Clangd 就是为了这醋包的饺子，怎么能少了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-12T09:05:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-12T09:05:49.000Z"}]]},"readingTime":{"minutes":1.33,"words":399},"git":{"createdTime":1752311149000,"updatedTime":1752311149000},"autoDesc":true,"filePathRelative":"vscode/vscode+STM32CubeCLT.md","headers":[],"categoryList":[{"id":"e2fc80","sort":10004,"name":"vscode"}]}`);export{h as comp,u as data};
